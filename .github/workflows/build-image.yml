name: Use Packer To Build Custom Image

on:
  push:
    branches:
      - main

jobs:
  image_build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        cloud: [aws]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install --omit=dev  

      - name: Package Application
        run: tar -czf app.tar.gz index.js package.json

      - name: Check if artifact file exists before uploading
        run: |
          if [ -f "app.tar.gz" ]; then
            echo "File app.tar.gz exists. Proceeding to upload."
          else
            echo "File app.tar.gz does not exist. Skipping upload."
            exit 0
          fi

      - name: Upload application artifact (if exists)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: application-artifact-${{ matrix.cloud }}
          path: app.tar.gz





      - name: Install Packer
        run: |
          if ! command -v packer &> /dev/null; then
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            sudo apt update && sudo apt install -y packer
          fi

      - name: Set up AWS Client Interface
        if: matrix.cloud == 'aws'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Download application artifact
        uses: actions/download-artifact@v4
        with:
          name: application-artifact-${{ matrix.cloud }}

      - name: Extract application artifact
        run: tar -xzf app.tar.gz -C .

      - name: Run packer init
        run: packer init machine-image.pkr.hcl

      - name: Build Packer Image
        if: matrix.cloud == 'aws'
        run: |
          packer build \
          -only=my-first-build.amazon-ebs.my-aws-ami \
          -var "cloud=${{ matrix.cloud }}" \
          machine-image.pkr.hcl

      - name: Get AWS AMI ID
        if: matrix.cloud == 'aws'
        run: |
          AMI_ID=$(aws ec2 describe-images --owners self --query 'Images[-1].ImageId' --output text)
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV
  
      - name: Share AWS AMI with DEMO Account
        if: matrix.cloud == 'aws'
        run: |
            aws ec2 modify-image-attribute --image-id $AMI_ID --launch-permission "Add=[{UserId='${{ secrets.DEMO_AWS_ACCOUNT_ID }}'}]" --region us-east-1
            echo "AWS AMI Shared with DEMO Account"
      
  
  
